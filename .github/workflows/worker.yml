name: Worker

on:
  push:
    branches: [main]
  schedule:
    - cron: "0,10,20,30,40,50 * * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Debug env vars
        shell: bash
        run: |
          echo -e "GITHUB_REPOSITORY: $GITHUB_REPOSITORY\n"
          echo -e "GITHUB_WORKSPACE: $GITHUB_WORKSPACE\n"
          echo -e "GITHUB_SHA: $GITHUB_SHA\n"
          echo -e "GITHUB_REF: $GITHUB_REF\n"
          echo -e "GITHUB_HEAD_REF: $GITHUB_HEAD_REF\n"
          echo -e "GITHUB_BASE_REF: $GITHUB_BASE_REF\n"
          echo -e "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME\n"
          echo -e "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH\n"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: "true"

      #- name: Import GPG key
      #  id: import-gpg
      #  uses: crazy-max/ghaction-import-gpg@v4
      #  with:
      #    gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
      #    passphrase: ${{ secrets.PASSPHRASE }}
      #    git_config_global: true
      #    git_user_signingkey: true
      #    git_commit_gpgsign: true
      #    fingerprint: "76BF41FD8C0589E1D5288B29E7279F2518CA55C6"

      - name: Get next job
        id: get-next-job
        uses: Nautilus-Cyberneering/git-queue@v1-beta
        with:
          queue_name: "library-update"
          action: "next-job"

      - name: Parse job payload
        id: parse-payload
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          PAYLOAD="${{ steps.get-next-job.outputs.job_payload }}" ./scripts/parse-payload.sh          

      - name: Build job started message payload
        id: build-start-payload
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          PAYLOAD="Successfully started job according to specification in commit:
          https://github.com/Nautilus-Cyberneering/chinese-ideographs-website/commit/${{ steps.get-next-job.outputs.job_commit }}"
          PAYLOAD="${PAYLOAD//'%'/'%25'}"
          PAYLOAD="${PAYLOAD//$'\n'/'%0A'}"
          PAYLOAD="${PAYLOAD//$'\r'/'%0D'}"
          echo "::set-output name=payload::$(echo "$PAYLOAD")"

      - name: Mark job as started
        id: start-job
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        uses: Nautilus-Cyberneering/git-queue@v1-beta
        with:
          queue_name: "library-update"
          action: "start-job"
          job_payload: ${{ steps.build-start-payload.outputs.payload }}          

        # Begin mutual exclusion job

      - name: Update submodule
        id: update-submodule
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          cd library
          git fetch --all
          git checkout ${{ steps.parse-payload.outputs.current_ref }} && echo "::set-output name=updated::true"

      - name: Commit submodule update
        id: commit-submodule-update
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          git add library
          git commit -m "update library aaa to commit ${{ steps.parse-payload.outputs.current_ref }}"

      - name: Setup DVC
        uses: iterative/setup-dvc@v1

      - name: Dvc diff for library
        id: library-dvc-diff
        run: ./scripts/library-dvc-diff.sh
        env:
          DVC_REPO_DIR: "library"
          PREVIOUS_REF: ${{ steps.update-library.outputs.previous_ref }}
          CURRENT_REF: ${{ steps.update-library.outputs.current_ref }}        

      - name: Pull dataset from remote
        run: cd library && dvc pull --remote azure && cd ..
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}

      - name: Sync images from media library (git submodule) to this repo
        run: ./scripts/sync-base-images.sh

      - name: Resize synched imaged
        uses: ./.github/actions/resize-image
        with:
          images_path: public/images
          width: 512
          height: 512

      - name: Change file format of synched images
        uses: ./.github/actions/change-image-file-format
        with:
          images_path: public/images
          format: jpg

      - name: Remove unneeded base images
        run: ./scripts/sync-base-images.sh remove_base

      - name: Show added or modified Base Images
        run:  |
          git status
          git --no-pager diff

      - name: Archive images
        uses: actions/upload-artifact@v2
        if: ${{ !env.ACT }}
        with:
          name: public-images
          path: public/images

      - name: Auto-commit added or modified images
        id: auto-commit
        uses: ./.github/actions/auto-commit-images
        with:
          repository: "${{ github.repository }}"
          repo_dir: "${{ github.workspace }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          branch: "${{ github.ref }}"

      - name: Debug auto-commit output
        run: |
          echo "Output var 'changes_detected': ${{ steps.auto-commit.outputs.changes_detected }}"

        # End mutual exclusion job

      - name: Build job finished message payload
        id: build-finish-payload
        if: ${{ steps.start-job.outputs.job_started == 'true' }}
        shell: bash
        run: |
          PAYLOAD="Successfully finished job according to specification in commit:
          https://github.com/Nautilus-Cyberneering/chinese-ideographs-website/commit/${{ steps.get-next-job.outputs.job_commit }}"
          PAYLOAD="${PAYLOAD//'%'/'%25'}"
          PAYLOAD="${PAYLOAD//$'\n'/'%0A'}"
          PAYLOAD="${PAYLOAD//$'\r'/'%0D'}"
          echo "::set-output name=payload::$(echo "$PAYLOAD")"

      - name: Mark job as finished
        id: finish-job
        if: ${{ steps.start-job.outputs.job_started == 'true' }}
        uses: Nautilus-Cyberneering/git-queue@v1-beta
        with:
          queue_name: "library-update"
          action: "finish-job"
          job_payload: ${{ steps.build-finish-payload.outputs.payload }}

      - name: Debug step outputs
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        run: |
          echo -e "previous_ref: ${{ steps.parse-payload.outputs.previous_ref }}"
          echo -e "current_ref: ${{ steps.parse-payload.outputs.current_ref }}"
          echo -e "updated: ${{ steps.update-submodule.outputs.updated }}"
          echo -e "start payload:\n${{ steps.build-start-payload.outputs.payload }}"
          echo -e "finish payload:\n${{ steps.build-finish-payload.outputs.payload }}"

      - name: Show new commits
        run: |
          git log --pretty="fuller" --show-signature -5        

      - name: Push
        id: push
        if: ${{ steps.get-next-job.outputs.job_found == 'true' }}
        shell: bash
        run: |
          git push

      - name: Build website if Base images have been added
        if: ${{ steps.auto-commit.outputs.changes_detected == 'true' }}
        run: |
          npm install
          npm run build

      - name: Deploy website if Base images have been added
        if: ${{ steps.auto-commit.outputs.changes_detected == 'true' }}
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: public
          
